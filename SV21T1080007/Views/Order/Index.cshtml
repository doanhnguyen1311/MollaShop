@model SV21T1080007.Web.Models.OrderSearchInput
@{
    ViewBag.Title = "Quản lý đơn hàng";
}
<div class="box box-primary">
    <div class="box-body">
        <form id="frmSearchInput" action="~/Order/Search" method="post">
            <input type="hidden" name="@nameof(Model.PageSize)" value="@Model.PageSize" />
            <div class="row container-fluid">
                <div class="col-sm-2">
                    <select class="form-control" name="@nameof(Model.Status)" id="statusSelect">
                        <option value="0">-- Trạng thái --</option>
                        <option value="1">Đơn hàng mới (chờ duyệt)</option>
                        <option value="2">Đơn hàng đã duyệt (chờ chuyển hàng)</option>
                        <option value="3">Đơn hàng đang được giao</option>
                        <option value="4">Đơn hàng đã hoàn tất thành công</option>
                        <option value="-1">Đơn hàng bị hủy</option>
                        <option value="-2">Đơn hàng bị từ chối</option>
                    </select>
                </div>
                <div class="col-sm-2">
                    <input type="text" name="@nameof(Model.TimeRange)" id="dateRange" value="@Model.TimeRange" class="form-control daterange-picker" placeholder="dd/MM/yyyy - dd/MM/yyyy" />
                </div>
                <div class="col-sm-8 input-group">
                    <input type="text" name="@nameof(Model.SearchValue)" class="form-control" placeholder="Tìm kiếm theo tên khách hàng hoặc tên người giao hàng">
                    <span class="input-group-btn">
                        <button type="submit" id="search-btn" class="btn btn-flat btn-info">
                            <i class="fa fa-search"></i> Tìm kiếm
                        </button>
                    </span>
                </div>
            </div>
        </form>
    </div>
    <div id="searchResult">
    </div>
</div>

@section scripts {
    <script>
        // Hàm tìm kiếm
        function doSearch(page) {
            var searchCondition = $("#frmSearchInput").serializeArray();
            searchCondition.push({ name: "page", value: page });
            var action = $("#frmSearchInput").prop("action");
            var method = $("#frmSearchInput").prop("method");

            $.ajax({
                url: action,
                type: method,
                data: searchCondition,
                success: function (data) {
                    $("#searchResult").html(data);
                }
            });
        }

        $(document).ready(function () {
            doSearch(@Model.Page);

            // Sự kiện khi form được submit
            $("#frmSearchInput").submit(function (e) {
                e.preventDefault();
                doSearch(1);
            });

            // Khởi tạo daterange picker
            $('#dateRange').daterangepicker({
                locale: {
                    format: 'DD/MM/YYYY', // Định dạng ngày
                    separator: ' - '       // Dấu phân cách giữa hai ngày
                },
                opens: 'left'
            });
        });
        document.addEventListener('DOMContentLoaded', function () {
            // Lấy giá trị của Model.Status từ một biến JavaScript
            var status = @Model.Status;

            // Tìm thẻ select với id="statusSelect"
            var selectElement = document.getElementById("statusSelect");

            // Duyệt qua các option và set selected cho option có giá trị tương ứng với status
            for (var i = 0; i < selectElement.options.length; i++) {
                if (selectElement.options[i].value == status.toString()) {
                    selectElement.options[i].selected = true;
                    break;
                }
            }
        });
    </script>
}
